{"version":3,"sources":["components/Card.js","assets/build_testable-projects-fcc_audio_BeepSound.wav","App.js","index.js"],"names":["Card","props","className","children","App","useState","sessionLength","breakLength","minutes","seconds","isRunning","onBreak","session","setSession","audioRef","useRef","sessionLengthHandler","event","target","value","prevValue","breakLengthHandler","useEffect","current","play","interval","setInterval","clearInterval","id","onClick","icon","faMinus","faPlus","ref","src","soundFile","toString","length","pause","currentTime","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf55e0c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/build_testable-projects-fcc_audio_BeepSound.372995a9.wav\";","import \"./App.css\";\nimport Card from \"./components/Card\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useRef, useState } from \"react\";\nimport soundFile from \"../src/assets/build_testable-projects-fcc_audio_BeepSound.wav\";\n\nfunction App() {\n  const [session, setSession] = useState({\n    sessionLength: 25,\n    breakLength: 5,\n    minutes: 25,\n    seconds: 0,\n    isRunning: false,\n    onBreak: false,\n  });\n  const audioRef = useRef(null);\n\n  const beepHandler = () => {\n    audioRef.current.play();\n  };\n\n  const beepResetHandler = () => {\n    audioRef.current.pause();\n    audioRef.current.currentTime = 0;\n  };\n\n  const sessionLengthHandler = (event) => {\n    if (!session.isRunning) {\n      switch (event.target.value) {\n        case \"-\":\n          if (session.sessionLength > 1) {\n            setSession((prevValue) => {\n              return {\n                ...prevValue,\n                sessionLength: prevValue.sessionLength - 1,\n                minutes: session.onBreak\n                  ? prevValue.minutes\n                  : prevValue.sessionLength - 1,\n                seconds: session.onBreak ? prevValue.seconds : 0,\n              };\n            });\n          }\n          break;\n        case \"+\":\n          if (session.sessionLength < 60) {\n            setSession((prevValue) => {\n              return {\n                ...prevValue,\n                sessionLength: prevValue.sessionLength + 1,\n                minutes: session.onBreak\n                  ? prevValue.minutes\n                  : prevValue.sessionLength + 1,\n                seconds: session.onBreak ? prevValue.seconds : 0,\n              };\n            });\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const breakLengthHandler = (event) => {\n    switch (event.target.value) {\n      case \"-\":\n        if (session.breakLength > 1) {\n          setSession((prevValue) => {\n            return {\n              ...prevValue,\n              breakLength: prevValue.breakLength - 1,\n              minutes: session.onBreak\n                ? prevValue.breakLength - 1\n                : prevValue.minutes,\n              seconds: session.onBreak ? 0 : prevValue.seconds,\n            };\n          });\n        }\n        break;\n      case \"+\":\n        if (session.breakLength < 60) {\n          setSession((prevValue) => {\n            return {\n              ...prevValue,\n              breakLength: prevValue.breakLength + 1,\n              minutes: session.onBreak\n                ? prevValue.breakLength + 1\n                : prevValue.minutes,\n              seconds: session.onBreak ? 0 : prevValue.seconds,\n            };\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const startPauseHandler = (event) => {\n    switch (event.target.id) {\n      case \"start_stop\":\n        setSession((prevValue) => {\n          return {\n            ...prevValue,\n            isRunning: !prevValue.isRunning,\n          };\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const resetHandler = () => {\n    beepResetHandler();\n    setSession({\n      sessionLength: 25,\n      breakLength: 5,\n      minutes: 25,\n      seconds: 0,\n      isRunning: false,\n      onBreak: false,\n    });\n  };\n\n  useEffect(() => {\n    if (session.isRunning) {\n      if (session.minutes === 0 && session.seconds === 0) {\n        // console.log(\"Min: \" + session.minutes + \" Sec: \" + session.seconds);\n        beepHandler();\n      }\n\n      const interval = setInterval(() => {\n        if (session.minutes >= 0 && session.seconds >= 0) {\n          setSession((prevValue) => {\n            return {\n              ...prevValue,\n              seconds: prevValue.seconds - 1,\n            };\n          });\n        }\n      }, 1000);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  });\n\n  if (session.isRunning) {\n    if (session.seconds < 0 && session.minutes > 0) {\n      setSession((prevValue) => {\n        return {\n          ...prevValue,\n          minutes: prevValue.minutes - 1,\n          seconds: 59,\n        };\n      });\n    }\n\n    if (session.minutes === 0 && session.seconds < 0) {\n      setSession((prevValue) => {\n        if (!session.onBreak) {\n          // console.log(\"break\");\n          return {\n            ...prevValue,\n            sessionLength: prevValue.sessionLength,\n            breakLength: prevValue.breakLength,\n            minutes: prevValue.breakLength,\n            seconds: 0,\n            onBreak: !prevValue.onBreak,\n          };\n        } else {\n          // console.log(\"session\");\n          return {\n            ...prevValue,\n            sessionLength: prevValue.sessionLength,\n            breakLength: prevValue.breakLength,\n            minutes: prevValue.sessionLength,\n            seconds: 0,\n            onBreak: !prevValue.onBreak,\n          };\n        }\n      });\n    }\n  }\n\n  return (\n    <>\n      <div className=\"App\">\n        <Card>\n          <h1 id=\"session-label\">Session Length</h1>\n          <div id=\"controls\">\n            <button\n              onClick={sessionLengthHandler}\n              value=\"-\"\n              id=\"session-decrement\"\n            >\n              <FontAwesomeIcon icon={faMinus} />\n            </button>\n            <div id=\"session-length\">{session.sessionLength}</div>\n            <button\n              onClick={sessionLengthHandler}\n              value=\"+\"\n              id=\"session-increment\"\n            >\n              <FontAwesomeIcon icon={faPlus} />\n            </button>\n          </div>\n        </Card>\n        <Card>\n          <div id=\"timer\">\n            <audio id=\"beep\" ref={audioRef} src={soundFile}></audio>\n            <h1 id=\"timer-label\">{session.onBreak ? \"Break\" : \"Session\"}</h1>\n            <div id=\"time-left\">{`${\n              session.minutes.toString().length === 1\n                ? \"0\" + session.minutes.toString()\n                : session.minutes.toString()\n            }:${\n              session.seconds.toString().length === 1\n                ? \"0\" + session.seconds.toString()\n                : session.seconds.toString()\n            }`}</div>\n          </div>\n        </Card>\n        <Card>\n          <h1 id=\"break-label\">Break Length</h1>\n          <div id=\"controls\">\n            <button onClick={breakLengthHandler} value=\"-\" id=\"break-decrement\">\n              <FontAwesomeIcon icon={faMinus} />\n            </button>\n            <div id=\"break-length\">{session.breakLength}</div>\n            <button onClick={breakLengthHandler} value=\"+\" id=\"break-increment\">\n              <FontAwesomeIcon icon={faPlus} />\n            </button>\n          </div>\n        </Card>\n      </div>\n      <div id=\"btn\">\n        <button id=\"start_stop\" onClick={startPauseHandler}>\n          PlayPause\n          {/* <FontAwesomeIcon icon={faPlay} />\n          <FontAwesomeIcon icon={faPause} /> */}\n        </button>\n        <button id=\"reset\" onClick={resetHandler}>\n          {/* <FontAwesomeIcon icon={faUndo} /> */}\n          Reset\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}